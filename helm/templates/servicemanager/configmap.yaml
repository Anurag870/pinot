{{- if .Values.servicemanager.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pinot.servicemanager.fullname" . }}-config
  labels:
    app: {{ include "pinot.name" . }}
    chart: {{ include "pinot.chart" . }}
    component: {{ .Values.servicemanager.name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  pinot-controller.conf: |-
    controller.helix.cluster.name={{ .Values.cluster.name }}
    controller.mode=DUAL
    controller.port={{ .Values.controller.port }}
    controller.vip.host={{ include "pinot.controller.fullname" . }}
    controller.vip.port={{ .Values.controller.service.port }}
    controller.data.dir={{ .Values.controller.data.dir }}
    controller.zk.str={{ include "zookeeper.path" . }}
    pinot.set.instance.id.to.hostname=true
    pinot.service.role = CONTROLLER
  pinot-broker.conf: |-
    pinot.broker.client.queryPort={{ .Values.broker.port }}
    pinot.broker.routing.table.builder.class={{ .Values.broker.routingTable.builderClass }}
    pinot.preferHostnameInDefaultInstanceId=true
    pinot.set.instance.id.to.hostname=true
    pinot.broker.timeoutMs={{ .Values.broker.timeoutMs }}
    pinot.service.role = BROKER
  pinot-server.conf: |-
    pinot.server.netty.port={{ .Values.server.ports.netty }}
    pinot.server.adminapi.port={{ .Values.server.ports.admin }}
    pinot.server.instance.dataDir={{ .Values.server.dataDir }}
    pinot.server.instance.segmentTarDir={{ .Values.server.segmentTarDir }}
    pinot.set.instance.id.to.hostname=true
    pinot.server.instance.realtime.alloc.offheap=true
    pinot.server.query.executor.timeout=60000
    pinot.service.role = SERVER
{{- end }}
